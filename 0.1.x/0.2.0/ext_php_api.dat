a:2:{s:4:"meta";a:3:{s:5:"title";s:12:"DAM Frontend";s:5:"descr";s:50:"Using the category tree ot the dam in the frontend";s:7:"options";a:2:{s:10:"usageCount";N;s:19:"includeCodeAbstract";N;}}s:5:"files";a:12:{s:14:"MD5_c02975ddc6";a:4:{s:8:"filename";s:19:"tx_dam_flexFunc.php";s:8:"filesize";i:737;s:6:"header";N;s:3:"DAT";a:2:{i:1;a:4:{s:6:"header";s:45:"class tx_dam_flexFunc extends tx_dam_tceFunc{";s:5:"class";i:1;s:11:"parentClass";s:15:"tx_dam_flexFunc";s:6:"atLine";i:5;}i:3;a:6:{s:6:"header";s:50:"function  getSingleField_selectTree($PA, &$fObj) {";s:11:"parentClass";s:15:"tx_dam_flexFunc";s:7:"content";s:0:"";s:12:"content_size";i:552;s:13:"content_lines";i:22;s:6:"atLine";i:8;}}}s:14:"MD5_7bed6dfaa2";a:4:{s:8:"filename";s:43:"DAL/class.tx_damfrontend_DAL_categories.php";s:8:"filesize";i:10866;s:6:"header";a:5:{s:4:"text";s:237:"


class.tx_damfrontend_DAL_categories.php

This class is doing all database actions for categories
FUNCTIONS WHITH DIRECT DATABASE ACCESS
getCategory
getSubCategories
getCategories


Some scripts that use this class:	--
Depends on:		---";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:14:"@package typo3";i:1;s:27:"@subpackage tx_dam_frontend";i:2;s:43:"@author Martin Baum <typo3@bus-netzwerk.de>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"typo3 ";}s:11:"@subpackage";a:1:{i:0;s:16:"tx_dam_frontend ";}s:7:"@author";a:1:{i:0;s:35:"Martin Baum <typo3@bus-netzwerk.de>";}}}s:3:"DAT";a:13:{i:1;a:8:{s:6:"header";s:37:"class tx_damfrontend_DAL_categories {";s:5:"class";i:1;s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:3:{s:4:"text";s:778:"

[CLASS/FUNCTION INDEX of SCRIPT]



  67: class tx_damfrontend_DAL_categories
  81:     function getCategory($catID)
 103:     function getCategory_Rootline($catID)
 127:     function getAllCategories()
 140:     function getSubCategories($catID, $limit=999)
 183:     function getParentCategories($catID)
 212:     function getCategoryMountpoints($userID, $relID)
 231:     function getCategories($userID, $relID)
 258:     function getCategories_Rootline($userID, $relID)
 270:     function isParentCategory($catID, $parentID)
 282:     function isSubCategory($catID, $subID)
 297:     function findUidinList($list, $id)
 318:     function checkCategoryAccess($userID, $catID)

TOTAL FUNCTIONS: 12
(This index is automatically created/updated by the extension "extdeveval")
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:430;s:13:"content_lines";i:12;s:6:"atLine";i:65;}i:3;a:6:{s:6:"header";s:30:"function getCategory($catID) {";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:7:"content";s:0:"";s:12:"content_size";i:482;s:13:"content_lines";i:14;s:6:"atLine";i:79;}i:5;a:7:{s:6:"header";s:39:"function getCategory_Rootline($catID) {";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:3:{s:4:"text";s:107:"

generates a uniqe list of all categories from the
specified category up to the root of the category tree
";s:5:"param";a:1:{i:0;a:2:{i:0;s:3:"int";i:1;s:37:"$catID: ID of the category to get the";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:57:"uniqe list of all categories assosiated with the given ID";}}s:7:"content";s:0:"";s:12:"content_size";i:423;s:13:"content_lines";i:15;s:6:"atLine";i:101;}i:7;a:7:{s:6:"header";s:29:"function getAllCategories() {";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:5:{s:4:"text";s:139:"

creates a list of all ate, which are currently availible.
This is dtermined by the current frontend user and his membership
of fe_groups
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:35:"all availible documents as an array";}s:5:"other";a:1:{i:0;s:51:"@todo getAllCategories: this function is not ready!";}s:11:"other_index";a:1:{s:5:"@todo";a:1:{i:0;s:45:"getAllCategories: this function is not ready!";}}}s:7:"content";s:0:"";s:12:"content_size";i:9;s:13:"content_lines";i:5;s:6:"atLine";i:125;}i:9;a:7:{s:6:"header";s:47:"function getSubCategories($catID, $limit=999) {";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:3:{s:4:"text";s:50:"

get all subcategories of the specified category
";s:5:"param";a:2:{i:0;a:2:{i:0;s:3:"int";i:1;s:55:"$catID: name of the category to fiond all subcategories";}i:1;a:2:{i:0;s:3:"int";i:1;s:35:"$limit: how deep shall the call run";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:39:"list of all subcategory of an extension";}}s:7:"content";s:0:"";s:12:"content_size";i:1055;s:13:"content_lines";i:36;s:6:"atLine";i:138;}i:11;a:7:{s:6:"header";s:38:"function getParentCategories($catID) {";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:3:{s:4:"text";s:53:"

gets all parent categories of an existing category
";s:5:"param";a:1:{i:0;a:2:{i:0;s:3:"int";i:1;s:24:"$catID category to check";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:36:"$recArray with all parent categories";}}s:7:"content";s:0:"";s:12:"content_size";i:763;s:13:"content_lines";i:21;s:6:"atLine";i:181;}i:13;a:7:{s:6:"header";s:50:"function getCategoryMountpoints($userID, $relID) {";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:3:{s:4:"text";s:57:"

creates a list, of all category - subIDs of an article
";s:5:"param";a:2:{i:0;a:2:{i:0;s:3:"int";i:1;s:41:"$userID: uid of the current frontend user";}i:1;a:2:{i:0;s:3:"int";i:1;s:58:"$relID: id of the name of the relation in $this->realtions";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:71:"a uniqe list of all mountpoints. Can be used to create a array of trees";}}s:7:"content";s:0:"";s:12:"content_size";i:387;s:13:"content_lines";i:11;s:6:"atLine";i:210;}i:15;a:7:{s:6:"header";s:41:"function getCategories($userID, $relID) {";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:3:{s:4:"text";s:57:"

returns all categories, the current user has access to
";s:5:"param";a:2:{i:0;a:2:{i:0;s:3:"int";i:1;s:60:"$userID: id of the user, who has the right to use the system";}i:1;a:2:{i:0;s:3:"int";i:1;s:43:"$relID: id to specify read / downloadaccess";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:29:"array of all category records";}}s:7:"content";s:0:"";s:12:"content_size";i:799;s:13:"content_lines";i:17;s:6:"atLine";i:229;}i:17;a:7:{s:6:"header";s:50:"function getCategories_Rootline($userID, $relID) {";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:5:{s:4:"text";s:102:"

gets all categories related to an user, also categories,
which are related via pagetree inheritence
";s:5:"param";a:2:{i:0;a:2:{i:0;s:3:"int";i:1;s:23:"$userID: id of the user";}i:1;a:2:{i:0;s:3:"int";i:1;s:33:"$relID: id of the relation in the";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:5:"other";a:1:{i:0;s:57:"@todo getCategories_Rootline: this function is not ready!";}s:11:"other_index";a:1:{s:5:"@todo";a:1:{i:0;s:51:"getCategories_Rootline: this function is not ready!";}}}s:7:"content";s:0:"";s:12:"content_size";i:8;s:13:"content_lines";i:4;s:6:"atLine";i:256;}i:19;a:7:{s:6:"header";s:46:"function isParentCategory($catID, $parentID) {";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:3:{s:4:"text";s:66:"

checks if the $subID Category is really a subcategory of $catID
";s:5:"param";a:2:{i:0;a:2:{i:0;s:3:"int";i:1;s:32:"$catID: suggested child Category";}i:1;a:2:{i:0;s:3:"int";i:1;s:36:"$parentID: suggested Parent Category";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:46:"returns true, if parentID is parentID of catID";}}s:7:"content";s:0:"";s:12:"content_size";i:119;s:13:"content_lines";i:4;s:6:"atLine";i:268;}i:21;a:7:{s:6:"header";s:40:"function isSubCategory($catID, $subID) {";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:3:{s:4:"text";s:65:"

checks if the $subID Category is really a subcategoy of $catID
";s:5:"param";a:2:{i:0;a:2:{i:0;s:3:"int";i:1;s:33:"$catID: suggested Parent Category";}i:1;a:2:{i:0;s:3:"int";i:1;s:32:"$subID: suggested child Category";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:46:"returns true, if subID is subcategory of catID";}}s:7:"content";s:0:"";s:12:"content_size";i:117;s:13:"content_lines";i:6;s:6:"atLine";i:280;}i:23;a:4:{s:6:"header";s:38:"function findUidinList($list, $id)
		{";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:3:{s:4:"text";s:124:"

searches for an uid in an given array and returns the found row. If multiple
records with the same uid exists in the list
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:28:"$list: various kind of array";}i:1;a:2:{i:0;s:3:"int";i:1;s:30:"$id: uid to search in the list";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:33:"returns the resultrow as an array";}}s:6:"atLine";i:295;}i:25;a:7:{s:6:"header";s:47:"function checkCategoryAccess($userID, $catID) {";s:11:"parentClass";s:29:"tx_damfrontend_DAL_categories";s:4:"cDat";a:3:{s:4:"text";s:124:"

searches for an uid in an given array and returns the found row. If multiple
records with the same uid exists in the list
";s:5:"param";a:2:{i:0;a:2:{i:0;s:5:"array";i:1;s:28:"$list: various kind of array";}i:1;a:2:{i:0;s:3:"int";i:1;s:30:"$id: uid to search in the list";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:33:"returns the resultrow as an array";}}s:7:"content";s:0:"";s:12:"content_size";i:354;s:13:"content_lines";i:18;s:6:"atLine";i:316;}}}s:14:"MD5_cc2565802b";a:4:{s:8:"filename";s:42:"DAL/class.tx_damfrontend_DAL_documents.php";s:8:"filesize";i:17093;s:6:"header";a:5:{s:4:"text";s:115:"


class.tx_damfrontend_DAL_documents.php

What does it do?


Some scripts that use this class:	---
Depends on:		--";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:14:"@package typo3";i:1;s:27:"@subpackage tx_dam_frontend";i:2;s:39:"@author Martin Baum <typo3@in2form.com>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"typo3 ";}s:11:"@subpackage";a:1:{i:0;s:16:"tx_dam_frontend ";}s:7:"@author";a:1:{i:0;s:31:"Martin Baum <typo3@in2form.com>";}}}s:3:"DAT";a:14:{i:1;a:8:{s:6:"header";s:36:"class tx_damfrontend_DAL_documents {";s:5:"class";i:1;s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:3:{s:4:"text";s:782:"

[CLASS/FUNCTION INDEX of SCRIPT]



  66: class tx_damfrontend_DAL_documents
  97:     function tx_damfrontend_DAL_documents()
 108:     function getCategoriesbyDoc($docID)
 133:     function checkAccess_fileRef($filePath)
 155:     function checkAccess($docID, $relID)
 180:     function getResultCount()
 204:     function createCatString()
 218:     function getDocumentFEGroups($docID, $relID)
 258:     function getDocument($docID)
 277:     function getDocumentList()
 353:     function getCategoriesByDoc_Rootline($docID)
 399:     function setFilter($filterArray)
 442:     function getSearchwordWhereString($searchword)
 454:     function evalDateError($day, $month, $year)

TOTAL FUNCTIONS: 13
(This index is automatically created/updated by the extension "extdeveval")
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:938;s:13:"content_lines";i:25;s:6:"atLine";i:64;}i:3;a:7:{s:6:"header";s:41:"function tx_damfrontend_DAL_documents() {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:3:{s:4:"text";s:18:"

inits the class
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:22:"list of all categories";}}s:7:"content";s:0:"";s:12:"content_size";i:85;s:13:"content_lines";i:3;s:6:"atLine";i:95;}i:5;a:7:{s:6:"header";s:37:"function getCategoriesbyDoc($docID) {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:3:{s:4:"text";s:137:"

gets all categories for the specified document and returns them as an array
includes also parent categories of the assigned categories
";s:5:"param";a:1:{i:0;a:2:{i:0;s:3:"int";i:1;s:13:"$fileUid: ...";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:22:"list of all categories";}}s:7:"content";s:0:"";s:12:"content_size";i:454;s:13:"content_lines";i:16;s:6:"atLine";i:106;}i:7;a:7:{s:6:"header";s:41:"function checkAccess_fileRef($filePath) {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:5:{s:4:"text";s:183:"

Checks, if access is allowed by a given file (path + name)
This function is retrieving the uid in the dam by resolving name and path and sending the uid to the function  checkAcess
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:14:"$filePath: ...";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:25:"true if access is allowed";}s:5:"other";a:1:{i:0;s:16:"@see checkAccess";}s:11:"other_index";a:1:{s:4:"@see";a:1:{i:0;s:12:"checkAccess ";}}}s:7:"content";s:0:"";s:12:"content_size";i:453;s:13:"content_lines";i:13;s:6:"atLine";i:131;}i:9;a:7:{s:6:"header";s:38:"function checkAccess($docID, $relID) {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:3:{s:4:"text";s:124:"

checks, if the current user has access to an specific document
if the document has no category, the access is not limited
";s:5:"param";a:2:{i:0;a:2:{i:0;s:3:"int";i:1;s:79:"$docID: uid of the the document, which delimites, if the user has access or not";}i:1;a:2:{i:0;s:3:"int";i:1;s:11:"$relID: ...";}}s:6:"return";a:2:{i:0;s:7:"boolean";i:1;s:48:"returns true if the user has access to this file";}}s:7:"content";s:0:"";s:12:"content_size";i:917;s:13:"content_lines";i:18;s:6:"atLine";i:153;}i:11;a:7:{s:6:"header";s:27:"function getResultCount() {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:5:{s:4:"text";s:52:"

Returns the number of rows for the result browser
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:3:"int";i:1;s:14:"Number of rows";}s:5:"other";a:1:{i:0;s:41:"@todo: return number of rows by sql query";}s:11:"other_index";a:1:{s:6:"@todo:";a:1:{i:0;s:34:"return number of rows by sql query";}}}s:7:"content";s:0:"";s:12:"content_size";i:875;s:13:"content_lines";i:17;s:6:"atLine";i:178;}i:13;a:7:{s:6:"header";s:28:"function createCatString() {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:5:{s:4:"text";s:48:"

This function is currently not used and empty
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}s:5:"other";a:1:{i:0;s:32:"@todo: check if we can delete it";}s:11:"other_index";a:1:{s:6:"@todo:";a:1:{i:0;s:25:"check if we can delete it";}}}s:7:"content";s:0:"";s:12:"content_size";i:9;s:13:"content_lines";i:5;s:6:"atLine";i:202;}i:15;a:7:{s:6:"header";s:46:"function getDocumentFEGroups($docID, $relID) {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:3:{s:4:"text";s:122:"

creates a list of all groups, which are assosiated with an FE Group
also parent categories of the document are included
";s:5:"param";a:2:{i:0;a:2:{i:0;s:3:"int";i:1;s:27:"$docID: uid of the document";}i:1;a:2:{i:0;s:3:"int";i:1;s:85:"$relID: ID in the array $this->realtions. Determines, which database relation is used";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:60:"Array which contains all usergroups associated with the file";}}s:7:"content";s:0:"";s:12:"content_size";i:1364;s:13:"content_lines";i:33;s:6:"atLine";i:216;}i:17;a:7:{s:6:"header";s:30:"function getDocument($docID) {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:3:{s:4:"text";s:52:"

Retuns the resultlist of a requestet DAM Document
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"[int]";i:1;s:29:"$docID: the UID of a document";}}s:6:"return";a:2:{i:0;s:4:"[SQL";i:1;s:7:"Result]";}}s:7:"content";s:0:"";s:12:"content_size";i:213;s:13:"content_lines";i:11;s:6:"atLine";i:256;}i:19;a:7:{s:6:"header";s:28:"function getDocumentList() {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:3:{s:4:"text";s:206:"

generates a list of all availible documents. Used by the frontend. The
selection is filterd by the given list of categories and the
access restrictions  -> relation "READ ACCESS" defined for the document
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:52:"returns an array which contains all selected records";}}s:7:"content";s:0:"";s:12:"content_size";i:2399;s:13:"content_lines";i:68;s:6:"atLine";i:275;}i:21;a:7:{s:6:"header";s:48:"function getCategoriesByDoc_Rootline($docID)
		{";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:3:{s:4:"text";s:124:"

creates a list of all categories, a document is associated
Interited groups from parent folders are included in this list
";s:5:"param";a:1:{i:0;a:2:{i:0;s:3:"int";i:1;s:46:"$docID: id of the table, to get the pages from";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:18:"list of categories";}}s:7:"content";s:0:"";s:12:"content_size";i:1312;s:13:"content_lines";i:37;s:6:"atLine";i:351;}i:23;a:7:{s:6:"header";s:34:"function setFilter($filterArray) {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:3:{s:4:"text";s:119:"

this function creates the WHERE - String with all availible filters
input filter requests are mapped to SQL - querys
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:78:"$filterArray: array of all get - Vars which are relatet with the filter system";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:68:"returns an array with error codes - filled while cration of the form";}}s:7:"content";s:0:"";s:12:"content_size";i:1844;s:13:"content_lines";i:36;s:6:"atLine";i:397;}i:25;a:4:{s:6:"header";s:48:"function getSearchwordWhereString($searchword) {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:3:{s:4:"text";s:41:"

returns a searchword transfered to int
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:35:"$searchword: blank separated string";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:55:"where clause, ready for adding it to the document array";}}s:6:"atLine";i:440;}i:27;a:7:{s:6:"header";s:45:"function evalDateError($day, $month, $year) {";s:11:"parentClass";s:28:"tx_damfrontend_DAL_documents";s:4:"cDat";a:3:{s:4:"text";s:101:"

evaluates the given Date and returns true if the date is in correct form to covert it to timestamp
";s:5:"param";a:3:{i:0;a:2:{i:0;s:3:"int";i:1;s:18:"$day: day of month";}i:1;a:2:{i:0;s:3:"int";i:1;s:21:"$month: month of year";}i:2;a:2:{i:0;s:3:"int";i:1;s:14:"$year: year in";}}s:6:"return";a:2:{i:0;s:4:"bool";i:1;s:92:"if the given date is correct - return  true, if something is wrong or missing - return false";}}s:7:"content";s:0:"";s:12:"content_size";i:190;s:13:"content_lines";i:10;s:6:"atLine";i:452;}}}s:14:"MD5_7c3fa3dc87";a:4:{s:8:"filename";s:44:"DAL/class.tx_damfrontend_baseSessionData.php";s:8:"filesize";i:2531;s:6:"header";a:5:{s:4:"text";s:245:"


class.tx_dam_frontend_baseSessionData.php

This class is a Baseclass for Providers, which store Data in the Session
in PHP 5, this methods would be protected


Some scripts that use this class:	class.tx_damfrontend_catList.php
Depends on:		--";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:14:"@package typo3";i:1;s:27:"@subpackage tx_dam_frontend";i:2;s:39:"@author Martin Baum <typo3@in2form.com>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"typo3 ";}s:11:"@subpackage";a:1:{i:0;s:16:"tx_dam_frontend ";}s:7:"@author";a:1:{i:0;s:31:"Martin Baum <typo3@in2form.com>";}}}s:3:"DAT";a:4:{i:1;a:8:{s:6:"header";s:38:"class tx_damfrontend_baseSessionData {";s:5:"class";i:1;s:11:"parentClass";s:30:"tx_damfrontend_baseSessionData";s:4:"cDat";a:3:{s:4:"text";s:309:"

[CLASS/FUNCTION INDEX of SCRIPT]



  55: class tx_damfrontend_baseSessionData
  59:     function tx_damfrontend_baseSessionData()
  68:     function getArrayFromUser()
  79:     function setArrayToUser($array)

TOTAL FUNCTIONS: 3
(This index is automatically created/updated by the extension "extdeveval")
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:124;s:13:"content_lines";i:2;s:6:"atLine";i:53;}i:3;a:6:{s:6:"header";s:43:"function tx_damfrontend_baseSessionData() {";s:11:"parentClass";s:30:"tx_damfrontend_baseSessionData";s:7:"content";s:0:"";s:12:"content_size";i:49;s:13:"content_lines";i:3;s:6:"atLine";i:57;}i:5;a:4:{s:6:"header";s:29:"function getArrayFromUser() {";s:11:"parentClass";s:30:"tx_damfrontend_baseSessionData";s:4:"cDat";a:3:{s:4:"text";s:51:"

returns the data that hos been stored by the key
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:6:"atLine";i:66;}i:7;a:7:{s:6:"header";s:33:"function setArrayToUser($array) {";s:11:"parentClass";s:30:"tx_damfrontend_baseSessionData";s:4:"cDat";a:3:{s:4:"text";s:33:"

sets an array by the given var
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:50:"$array: array whith values in any form you want to";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:65;s:13:"content_lines";i:4;s:6:"atLine";i:77;}}}s:14:"MD5_10930c1059";a:4:{s:8:"filename";s:36:"DAL/class.tx_damfrontend_catList.php";s:8:"filesize";i:5145;s:6:"header";a:5:{s:4:"text";s:190:"


class.tx_damfrontend_catList.php

This class is dealing the category list. If a FE_USER (deI selects a category this class is used.


Some scripts that use this class:	--
Depends on:		---";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:14:"@package typo3";i:1;s:27:"@subpackage tx_dam_frontend";i:2;s:39:"@author Martin Baum <typo3@in2form.com>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"typo3 ";}s:11:"@subpackage";a:1:{i:0;s:16:"tx_dam_frontend ";}s:7:"@author";a:1:{i:0;s:31:"Martin Baum <typo3@in2form.com>";}}}s:3:"DAT";a:6:{i:1;a:7:{s:6:"header";s:69:"class tx_damfrontend_catList extends tx_damfrontend_baseSessionData {";s:5:"class";i:1;s:11:"parentClass";s:22:"tx_damfrontend_catList";s:7:"content";s:0:"";s:12:"content_size";i:3;s:13:"content_lines";i:1;s:6:"atLine";i:59;}i:3;a:7:{s:6:"header";s:35:"function tx_damfrontend_catList() {";s:11:"parentClass";s:22:"tx_damfrontend_catList";s:4:"cDat";a:3:{s:4:"text";s:36:"

initialization of the the session
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:97;s:13:"content_lines";i:4;s:6:"atLine";i:66;}i:5;a:7:{s:6:"header";s:35:"function op_Plus($catID, $treeID) {";s:11:"parentClass";s:22:"tx_damfrontend_catList";s:4:"cDat";a:3:{s:4:"text";s:59:"

Operation for adding a category to the current selection
";s:5:"param";a:2:{i:0;a:2:{i:0;s:3:"int";i:1;s:50:"$catID: id of the category to add to the selection";}i:1;a:2:{i:0;s:3:"int";i:1;s:47:"$treeID: id of the tree to add to the selection";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:684;s:13:"content_lines";i:15;s:6:"atLine";i:78;}i:7;a:7:{s:6:"header";s:36:"function op_Minus($catID, $treeID) {";s:11:"parentClass";s:22:"tx_damfrontend_catList";s:4:"cDat";a:3:{s:4:"text";s:72:"

Operation for removing a given ID from the current category selection
";s:5:"param";a:2:{i:0;a:2:{i:0;s:3:"int";i:1;s:65:"$catID: category ID to remove from the current category selection";}i:1;a:2:{i:0;s:3:"int";i:1;s:49:"$treeID: tree id of the used category mount point";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:567;s:13:"content_lines";i:12;s:6:"atLine";i:101;}i:9;a:4:{s:6:"header";s:37:"function op_Equals($catID, $treeID) {";s:11:"parentClass";s:22:"tx_damfrontend_catList";s:4:"cDat";a:3:{s:4:"text";s:84:"

Deletes the current selection an makes the given catID the only selected category
";s:5:"param";a:2:{i:0;a:2:{i:0;s:3:"int";i:1;s:41:"$catID: catID to be the current selection";}i:1;a:2:{i:0;s:3:"int";i:1;s:44:"$treeID: ID of the used cat Tree Mount Point";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:6:"atLine";i:121;}i:11;a:7:{s:6:"header";s:28:"function getCatSelection() {";s:11:"parentClass";s:22:"tx_damfrontend_catList";s:4:"cDat";a:3:{s:4:"text";s:44:"

returns a list of all selected categories
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:31:"list of all selected categories";}}s:7:"content";s:0:"";s:12:"content_size";i:59;s:13:"content_lines";i:5;s:6:"atLine";i:138;}}}s:14:"MD5_bf8825f347";a:4:{s:8:"filename";s:36:"DAL/class.tx_damfrontend_docList.php";s:8:"filesize";i:1612;s:6:"header";a:5:{s:4:"text";s:109:"


class.tx_damfrontend_docList.php

What does it do?


Some scripts that use this class:	---
Depends on:		--";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:4:{i:0;s:14:"@package typo3";i:1;s:27:"@subpackage tx_dam_frontend";i:2;s:39:"@author Martin Baum <typo3@in2form.com>";i:3;s:45:"@todo this class is not used yet / delete it?";}s:11:"other_index";a:4:{s:8:"@package";a:1:{i:0;s:6:"typo3 ";}s:11:"@subpackage";a:1:{i:0;s:16:"tx_dam_frontend ";}s:7:"@author";a:1:{i:0;s:31:"Martin Baum <typo3@in2form.com>";}s:5:"@todo";a:1:{i:0;s:39:"this class is not used yet / delete it?";}}}s:3:"DAT";a:1:{i:1;a:8:{s:6:"header";s:30:"class tx_damfrontend_docList {";s:5:"class";i:1;s:11:"parentClass";s:22:"tx_damfrontend_docList";s:4:"cDat";a:3:{s:4:"text";s:169:"

[CLASS/FUNCTION INDEX of SCRIPT]



  52: class tx_damfrontend_docList

TOTAL FUNCTIONS: 0
(This index is automatically created/updated by the extension "extdeveval")
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:6;s:13:"content_lines";i:3;s:6:"atLine";i:50;}}}s:14:"MD5_f931826b1f";a:4:{s:8:"filename";s:40:"DAL/class.tx_damfrontend_filterState.php";s:8:"filesize";i:5475;s:6:"header";a:5:{s:4:"text";s:167:"


class.tx_damfrontend_filterState.php

class is responsible for storing the state of the filter in the session


Some scripts that use this class:	--
Depends on:		--";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:4:{i:0;s:14:"@package typo3";i:1;s:27:"@subpackage tx_dam_frontend";i:2;s:39:"@author Martin Baum <typo3@in2form.com>";i:3;s:22:"@todo finish the class";}s:11:"other_index";a:4:{s:8:"@package";a:1:{i:0;s:6:"typo3 ";}s:11:"@subpackage";a:1:{i:0;s:16:"tx_dam_frontend ";}s:7:"@author";a:1:{i:0;s:31:"Martin Baum <typo3@in2form.com>";}s:5:"@todo";a:1:{i:0;s:16:"finish the class";}}}s:3:"DAT";a:10:{i:1;a:8:{s:6:"header";s:72:"class tx_damfrontend_filterState extends tx_damfrontend_baseSessionData{";s:5:"class";i:1;s:11:"parentClass";s:26:"tx_damfrontend_filterState";s:4:"cDat";a:3:{s:4:"text";s:623:"

[CLASS/FUNCTION INDEX of SCRIPT]



  63: class tx_damfrontend_filterState extends tx_damfrontend_baseSessionData
  74:     function tx_damfrontend_filterState()
  86:     function setFilter($filterArray)
  98:     function syncFilterValues(&$internalFilter)
 117:     function resetFilter()
 128:     function getFilterFromSession()
 140:     function persistFilterState($name, $description, $uid)
 154:     function getFilterList($userID)
 174:     function loadFilter($filterID)
 185:     function deleteFilter($filterID)

TOTAL FUNCTIONS: 9
(This index is automatically created/updated by the extension "extdeveval")
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:59;s:13:"content_lines";i:5;s:6:"atLine";i:61;}i:3;a:7:{s:6:"header";s:39:"function tx_damfrontend_filterState() {";s:11:"parentClass";s:26:"tx_damfrontend_filterState";s:4:"cDat";a:3:{s:4:"text";s:39:"

sets the filter to the current array
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:144;s:13:"content_lines";i:5;s:6:"atLine";i:72;}i:5;a:7:{s:6:"header";s:34:"function setFilter($filterArray) {";s:11:"parentClass";s:26:"tx_damfrontend_filterState";s:4:"cDat";a:3:{s:4:"text";s:39:"

sets the filter to the current array
";s:5:"param";a:1:{i:0;a:2:{i:0;s:14:"[$filterArray]";i:1;s:17:"$filterArray: ...";}}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:44;s:13:"content_lines";i:3;s:6:"atLine";i:84;}i:7;a:7:{s:6:"header";s:45:"function syncFilterValues(&$internalFilter) {";s:11:"parentClass";s:26:"tx_damfrontend_filterState";s:4:"cDat";a:3:{s:4:"text";s:163:"

if a value in the parameter array doesn't exist, the value is taken from the
session data
if the value in the given array exists, its overwritten in the session
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:66:"$internalFilter: array to sync. Mostly the internal['filter'] vars";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:445;s:13:"content_lines";i:13;s:6:"atLine";i:96;}i:9;a:7:{s:6:"header";s:24:"function resetFilter() {";s:11:"parentClass";s:26:"tx_damfrontend_filterState";s:4:"cDat";a:3:{s:4:"text";s:31:"

[Resets the filter settings]
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:122;s:13:"content_lines";i:5;s:6:"atLine";i:115;}i:11;a:7:{s:6:"header";s:33:"function getFilterFromSession() {";s:11:"parentClass";s:26:"tx_damfrontend_filterState";s:4:"cDat";a:3:{s:4:"text";s:40:"

Loads the settings out of the session
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:41;s:13:"content_lines";i:3;s:6:"atLine";i:126;}i:13;a:7:{s:6:"header";s:56:"function persistFilterState($name, $description, $uid) {";s:11:"parentClass";s:26:"tx_damfrontend_filterState";s:4:"cDat";a:3:{s:4:"text";s:49:"

saves the status of the filter to the database
";s:5:"param";a:3:{i:0;a:2:{i:0;s:8:"[string]";i:1;s:10:"$name: ...";}i:1;a:2:{i:0;s:8:"[string]";i:1;s:17:"$description: ...";}i:2;a:2:{i:0;s:5:"[int]";i:1;s:9:"$uid: ...";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:186;s:13:"content_lines";i:7;s:6:"atLine";i:138;}i:15;a:7:{s:6:"header";s:33:"function getFilterList($userID) {";s:11:"parentClass";s:26:"tx_damfrontend_filterState";s:4:"cDat";a:3:{s:4:"text";s:37:"

loads the filter from the database
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"[int]";i:1;s:12:"$userID: ...";}}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:436;s:13:"content_lines";i:12;s:6:"atLine";i:152;}i:17;a:4:{s:6:"header";s:32:"function loadFilter($filterID) {";s:11:"parentClass";s:26:"tx_damfrontend_filterState";s:4:"cDat";a:5:{s:4:"text";s:81:"

function loads the filter with the given ID from the database into the session
";s:5:"param";a:1:{i:0;a:2:{i:0;s:3:"int";i:1;s:53:"$filterID: uid of the filter to load into the session";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}s:5:"other";a:1:{i:0;s:45:"@todo function loadFilter is not finished yet";}s:11:"other_index";a:1:{s:5:"@todo";a:1:{i:0;s:39:"function loadFilter is not finished yet";}}}s:6:"atLine";i:172;}i:19;a:7:{s:6:"header";s:34:"function deleteFilter($filterID) {";s:11:"parentClass";s:26:"tx_damfrontend_filterState";s:4:"cDat";a:5:{s:4:"text";s:54:"

deletes a filter with the given uid from the server
";s:5:"param";a:1:{i:0;a:2:{i:0;s:3:"int";i:1;s:59:"$filterID: deletes the given uid from the filterState table";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}s:5:"other";a:1:{i:0;s:47:"@todo function deleteFilter is not finished yet";}s:11:"other_index";a:1:{s:5:"@todo";a:1:{i:0;s:41:"function deleteFilter is not finished yet";}}}s:7:"content";s:0:"";s:12:"content_size";i:8;s:13:"content_lines";i:3;s:6:"atLine";i:183;}}}s:14:"MD5_c18bb6acf1";a:4:{s:8:"filename";s:38:"DAL/class.tx_damfrontend_listState.php";s:8:"filesize";i:3502;s:6:"header";a:5:{s:4:"text";s:168:"


class.tx_damfrontend_listState.php

class is responsible for storing the state of the list view in the session


Some scripts that use this class:	--
Depends on:		--";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:14:"@package typo3";i:1;s:27:"@subpackage tx_dam_frontend";i:2;s:39:"@author Martin Baum <typo3@in2form.com>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"typo3 ";}s:11:"@subpackage";a:1:{i:0;s:16:"tx_dam_frontend ";}s:7:"@author";a:1:{i:0;s:31:"Martin Baum <typo3@in2form.com>";}}}s:3:"DAT";a:6:{i:1;a:8:{s:6:"header";s:70:"class tx_damfrontend_listState extends tx_damfrontend_baseSessionData{";s:5:"class";i:1;s:11:"parentClass";s:24:"tx_damfrontend_listState";s:4:"cDat";a:3:{s:4:"text";s:416:"

[CLASS/FUNCTION INDEX of SCRIPT]



  57: class tx_damfrontend_listState extends tx_damfrontend_baseSessionData
  64:     function tx_damfrontend_listState()
  75:     function resetListState()
  89:     function setListState($listArray)
  98:     function getListState()
 108:     function syncListState(&$listState)

TOTAL FUNCTIONS: 5
(This index is automatically created/updated by the extension "extdeveval")
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:2;s:13:"content_lines";i:1;s:6:"atLine";i:55;}i:3;a:7:{s:6:"header";s:37:"function tx_damfrontend_listState() {";s:11:"parentClass";s:24:"tx_damfrontend_listState";s:4:"cDat";a:3:{s:4:"text";s:62:"

inits this class by loading the session data of the fe_user
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:142;s:13:"content_lines";i:5;s:6:"atLine";i:62;}i:5;a:7:{s:6:"header";s:27:"function resetListState() {";s:11:"parentClass";s:24:"tx_damfrontend_listState";s:4:"cDat";a:3:{s:4:"text";s:63:"

clears the list status by deleting the relevant session data
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:126;s:13:"content_lines";i:7;s:6:"atLine";i:73;}i:7;a:7:{s:6:"header";s:35:"function setListState($listArray) {";s:11:"parentClass";s:24:"tx_damfrontend_listState";s:4:"cDat";a:3:{s:4:"text";s:52:"

sets the list state by prossing a given listarray
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"[array]";i:1;s:15:"$listArray: ...";}}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:42;s:13:"content_lines";i:3;s:6:"atLine";i:87;}i:9;a:4:{s:6:"header";s:25:"function getListState() {";s:11:"parentClass";s:24:"tx_damfrontend_listState";s:4:"cDat";a:3:{s:4:"text";s:22:"

loads the listarray
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:7:"[array]";i:1;s:3:"...";}}s:6:"atLine";i:96;}i:11;a:7:{s:6:"header";s:37:"function syncListState(&$listState) {";s:11:"parentClass";s:24:"tx_damfrontend_listState";s:4:"cDat";a:3:{s:4:"text";s:77:"

Synchronzises the liststate in the usersession with the internal liststate
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"[array]";i:1;s:15:"$listState: ...";}}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:415;s:13:"content_lines";i:14;s:6:"atLine";i:106;}}}s:14:"MD5_7dd633b1ee";a:4:{s:8:"filename";s:45:"frontend/class.tx_damfrontend_catTreeView.php";s:8:"filesize";i:10884;s:6:"header";a:5:{s:4:"text";s:112:"


class.tx_damfrontend_catTreeView.php

What does it do?


Some scripts that use this class:	--
Depends on:		--";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:14:"@package typo3";i:1;s:27:"@subpackage tx_dam_frontend";i:2;s:39:"@author Martin Baum <typo3@in2form.com>";}s:11:"other_index";a:3:{s:8:"@package";a:1:{i:0;s:6:"typo3 ";}s:11:"@subpackage";a:1:{i:0;s:16:"tx_dam_frontend ";}s:7:"@author";a:1:{i:0;s:31:"Martin Baum <typo3@in2form.com>";}}}s:3:"DAT";a:11:{i:1;a:8:{s:6:"header";s:67:"class tx_damfrontend_catTreeView extends tx_dam_selectionCategory {";s:5:"class";i:1;s:11:"parentClass";s:26:"tx_damfrontend_catTreeView";s:4:"cDat";a:3:{s:4:"text";s:640:"

[CLASS/FUNCTION INDEX of SCRIPT]



  62: class tx_damfrontend_catTreeView extends tx_dam_selectionCategory
  75:     function tx_damfrontend_catTreeView()
 112:     function init($treeID='')
 127:     function expandNext($id)
 139:     function initializePositionSaving()
 160:     function savePosition()
 174:     function wrapTitle($title,$row,$bank=0)
 207:     function PM_ATagWrap($icon,$cmd,$bMark='treeroot')
 226:     function getControl($title,$row)
 287:     function printTree($treeArr='')
 346:     function getBrowsableTree()

TOTAL FUNCTIONS: 10
(This index is automatically created/updated by the extension "extdeveval")
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:571;s:13:"content_lines";i:11;s:6:"atLine";i:60;}i:3;a:6:{s:6:"header";s:39:"function tx_damfrontend_catTreeView() {";s:11:"parentClass";s:26:"tx_damfrontend_catTreeView";s:7:"content";s:0:"";s:12:"content_size";i:1057;s:13:"content_lines";i:30;s:6:"atLine";i:73;}i:5;a:7:{s:6:"header";s:27:"function init($treeID='') {";s:11:"parentClass";s:26:"tx_damfrontend_catTreeView";s:4:"cDat";a:3:{s:4:"text";s:79:"

inits the class and user
a frontend user is used to store the treestate data
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"[type]";i:1;s:12:"$treeID: ...";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:205;s:13:"content_lines";i:7;s:6:"atLine";i:111;}i:7;a:7:{s:6:"header";s:28:"function expandNext($id)
 	{";s:11:"parentClass";s:26:"tx_damfrontend_catTreeView";s:4:"cDat";a:5:{s:4:"text";s:28:"

expands the category tree
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"[int]";i:1;s:8:"$id: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:1:{i:0;s:37:"@todo check if this function is used?";}s:11:"other_index";a:1:{s:5:"@todo";a:1:{i:0;s:31:"check if this function is used?";}}}s:7:"content";s:0:"";s:12:"content_size";i:78;s:13:"content_lines";i:3;s:6:"atLine";i:126;}i:9;a:7:{s:6:"header";s:37:"function initializePositionSaving() {";s:11:"parentClass";s:26:"tx_damfrontend_catTreeView";s:4:"cDat";a:3:{s:4:"text";s:167:"

initialises the handling of the current treestate. Instead of storing
the serialised data inside the backend user ->uc Array, the frontend user
session data is used
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:536;s:13:"content_lines";i:18;s:6:"atLine";i:138;}i:11;a:7:{s:6:"header";s:27:"function savePosition()
 	{";s:11:"parentClass";s:26:"tx_damfrontend_catTreeView";s:4:"cDat";a:3:{s:4:"text";s:53:"

saves treestate inside of the fe_user Session Data
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:82;s:13:"content_lines";i:4;s:6:"atLine";i:162;}i:13;a:7:{s:6:"header";s:41:"function wrapTitle($title,$row,$bank=0) {";s:11:"parentClass";s:26:"tx_damfrontend_catTreeView";s:4:"cDat";a:3:{s:4:"text";s:26:"

wraps a Title in a link
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:11:"$title: ...";}i:1;a:2:{i:0;s:9:"resultset";i:1;s:9:"$row: ...";}i:2;a:2:{i:0;s:3:"int";i:1;s:10:"$bank: ...";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"html ...";}}s:7:"content";s:0:"";s:12:"content_size";i:549;s:13:"content_lines";i:24;s:6:"atLine";i:176;}i:15;a:7:{s:6:"header";s:52:"function PM_ATagWrap($icon,$cmd,$bMark='treeroot')	{";s:11:"parentClass";s:26:"tx_damfrontend_catTreeView";s:4:"cDat";a:3:{s:4:"text";s:14:"

PM_ATagWrap
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"string";i:1;s:21:"$icon: html (img Tag)";}i:1;a:2:{i:0;s:6:"string";i:1;s:9:"$cmd: ...";}i:2;a:2:{i:0;s:6:"string";i:1;s:11:"$bMark: ...";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:237;s:13:"content_lines";i:11;s:6:"atLine";i:209;}i:17;a:7:{s:6:"header";s:34:"function getControl($title,$row) {";s:11:"parentClass";s:26:"tx_damfrontend_catTreeView";s:4:"cDat";a:3:{s:4:"text";s:54:"

Renders the +-= buttons with corresponding commands
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:11:"$title: ...";}i:1;a:2:{i:0;s:11:"resultslist";i:1;s:9:"$row: ...";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:11:"HTML Output";}}s:7:"content";s:0:"";s:12:"content_size";i:250;s:13:"content_lines";i:6;s:6:"atLine";i:228;}i:19;a:3:{s:6:"header";s:33:"function printTree($treeArr='')	{";s:11:"parentClass";s:26:"tx_damfrontend_catTreeView";s:6:"atLine";i:289;}i:21;a:7:{s:6:"header";s:29:"function getBrowsableTree() {";s:11:"parentClass";s:26:"tx_damfrontend_catTreeView";s:4:"cDat";a:3:{s:4:"text";s:45:"

calls the parrent methoad getBrowsableTree
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:73;s:13:"content_lines";i:5;s:6:"atLine";i:348;}}}s:14:"MD5_6ac1a8a809";a:4:{s:8:"filename";s:43:"frontend/class.tx_damfrontend_rendering.php";s:8:"filesize";i:19252;s:6:"header";a:5:{s:4:"text";s:168:"


class.tx_damfrontend_rendering.php

 Division between the frontend script pi1
and the rendering of the content.

Some scripts that use this class:	--
Depends on:		--";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:4:{i:0;s:14:"@package typo3";i:1;s:27:"@subpackage tx_dam_frontend";i:2;s:39:"@author Martin Baum <typo3@in2form.com>";i:3;s:31:"@todo add stdWrap possibilities";}s:11:"other_index";a:4:{s:8:"@package";a:1:{i:0;s:6:"typo3 ";}s:11:"@subpackage";a:1:{i:0;s:16:"tx_dam_frontend ";}s:7:"@author";a:1:{i:0;s:31:"Martin Baum <typo3@in2form.com>";}s:5:"@todo";a:1:{i:0;s:25:"add stdWrap possibilities";}}}s:3:"DAT";a:19:{i:1;a:8:{s:6:"header";s:52:"class tx_damfrontend_rendering extends tslib_pibase{";s:5:"class";i:1;s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:1091:"

[CLASS/FUNCTION INDEX of SCRIPT]



  73: class tx_damfrontend_rendering extends tslib_pibase
  89:     function init()
 100:     function setFileRef($filePath)
 115:     function renderFileList($list, $resultcount, $pointer, $listLength)
 193:     function renderBrowseResults($resultcount, $pointer, $listLength)
 219:     function renderSortLink($key)
 237:     function renderCatSelection($list)
 265:     function renderSingleView($record)
 291:     function renderError($errormsg = 'deflaut')
 324:     function recordToMarkerArray($record)
 348:     function renderFilterView($filterArray, $errorArray = '')
 390:     function renderFileTypeList($filetype)
 434:     function renderFilterError($errorCode)
 445:     function renderUploadForm()
 457:     function renderFilterList($filterList)
 478:     function renderFilterCreationForm()
 491:     function renderFilterCreationLink()
 503:     function getFileIconHref($mimeType, $mimeSubType)
 530:     function getIconBaseAddress()

TOTAL FUNCTIONS: 18
(This index is automatically created/updated by the extension "extdeveval")
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:416;s:13:"content_lines";i:10;s:6:"atLine";i:71;}i:3;a:7:{s:6:"header";s:17:"function init() {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:48:"

inits this class (loading the locallang file)
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:28;s:13:"content_lines";i:4;s:6:"atLine";i:87;}i:5;a:7:{s:6:"header";s:32:"function setFileRef($filePath) {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:37:"

sets the paths for file references
";s:5:"param";a:1:{i:0;a:2:{i:0;s:8:"[string]";i:1;s:14:"$filePath: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:100;s:13:"content_lines";i:5;s:6:"atLine";i:98;}i:7;a:7:{s:6:"header";s:69:"function renderFileList($list, $resultcount, $pointer, $listLength) {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:61:"

function renderes a list of all files, which are availible
";s:5:"param";a:4:{i:0;a:2:{i:0;s:5:"array";i:1;s:10:"$list: ...";}i:1;a:2:{i:0;s:8:"rowcount";i:1;s:17:"$resultcount: ...";}i:2;a:2:{i:0;s:6:"[type]";i:1;s:13:"$pointer: ...";}i:3;a:2:{i:0;s:6:"[type]";i:1;s:16:"$listLength: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:3700;s:13:"content_lines";i:69;s:6:"atLine";i:113;}i:9;a:7:{s:6:"header";s:67:"function renderBrowseResults($resultcount, $pointer, $listLength) {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:100:"

renders a listbrowser which divides the resultlist of the selected files in better viewable parts
";s:5:"param";a:3:{i:0;a:2:{i:0;s:6:"[type]";i:1;s:17:"$resultcount: ...";}i:1;a:2:{i:0;s:6:"[type]";i:1;s:13:"$pointer: ...";}i:2;a:2:{i:0;s:6:"[type]";i:1;s:16:"$listLength: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:801;s:13:"content_lines";i:19;s:6:"atLine";i:191;}i:11;a:7:{s:6:"header";s:31:"function renderSortLink($key) {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:24:"

Renders the sortlinks
";s:5:"param";a:1:{i:0;a:2:{i:0;s:3:"int";i:1;s:9:"$key: ...";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:8:"Html	...";}}s:7:"content";s:0:"";s:12:"content_size";i:505;s:13:"content_lines";i:11;s:6:"atLine";i:217;}i:13;a:7:{s:6:"header";s:36:"function renderCatSelection($list) {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:63:"

transforms the list of selected categories to an html output
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:32:"$list: list of selected elements";}}s:6:"return";a:2:{i:0;s:4:"html";i:1;s:43:"rendered category selection content element";}}s:7:"content";s:0:"";s:12:"content_size";i:839;s:13:"content_lines";i:21;s:6:"atLine";i:235;}i:15;a:7:{s:6:"header";s:36:"function renderSingleView($record) {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:26:"

Renders the single View
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:75:"$record: data of the single record, that shall be rendered by this function";}}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:1319;s:13:"content_lines";i:19;s:6:"atLine";i:263;}i:17;a:7:{s:6:"header";s:45:"function renderError($errormsg = 'deflaut') {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:27:"

Renders an error message
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"string";i:1;s:14:"$errormsg: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:824;s:13:"content_lines";i:26;s:6:"atLine";i:289;}i:19;a:7:{s:6:"header";s:39:"function recordToMarkerArray($record) {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:85:"

converts an associative array to an Marker Array in the form ### $KEY ### => value
";s:5:"param";a:1:{i:0;a:2:{i:0;s:5:"array";i:1;s:38:"$record: array that shall be converted";}}s:6:"return";a:2:{i:0;s:5:"array";i:1;s:34:"Markerarray ready for substitution";}}s:7:"content";s:0:"";s:12:"content_size";i:460;s:13:"content_lines";i:16;s:6:"atLine";i:322;}i:21;a:7:{s:6:"header";s:59:"function renderFilterView($filterArray, $errorArray = '') {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:26:"

Renders the filter view
";s:5:"param";a:2:{i:0;a:2:{i:0;s:7:"[array]";i:1;s:17:"$filterArray: ...";}i:1;a:2:{i:0;s:7:"[array]";i:1;s:16:"$errorArray: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:1828;s:13:"content_lines";i:35;s:6:"atLine";i:346;}i:23;a:7:{s:6:"header";s:40:"function renderFileTypeList($filetype) {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:28:"

Renders the filetype list
";s:5:"param";a:1:{i:0;a:2:{i:0;s:8:"[string]";i:1;s:14:"$filetype: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:885;s:13:"content_lines";i:36;s:6:"atLine";i:388;}i:25;a:7:{s:6:"header";s:40:"function renderFilterError($errorCode) {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:5:{s:4:"text";s:25:"

Renders a Filter Error
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"[type]";i:1;s:15:"$errorCode: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:1:{i:0;s:28:"@todo 	Function not finished";}s:11:"other_index";a:1:{s:5:"@todo";a:1:{i:0;s:21:"Function not finished";}}}s:7:"content";s:0:"";s:12:"content_size";i:8;s:13:"content_lines";i:4;s:6:"atLine";i:432;}i:27;a:7:{s:6:"header";s:29:"function renderUploadForm() {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:5:{s:4:"text";s:19:"

renderUploadForm
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:1:{i:0;s:30:"@todo function is not finished";}s:11:"other_index";a:1:{s:5:"@todo";a:1:{i:0;s:24:"function is not finished";}}}s:7:"content";s:0:"";s:12:"content_size";i:8;s:13:"content_lines";i:4;s:6:"atLine";i:443;}i:29;a:7:{s:6:"header";s:40:"function renderFilterList($filterList) {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:5:{s:4:"text";s:19:"

renderFilterList
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"[type]";i:1;s:16:"$filterList: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:1:{i:0;s:42:"@todo renderFilterList is not finished yet";}s:11:"other_index";a:1:{s:5:"@todo";a:1:{i:0;s:36:"renderFilterList is not finished yet";}}}s:7:"content";s:0:"";s:12:"content_size";i:479;s:13:"content_lines";i:14;s:6:"atLine";i:455;}i:31;a:7:{s:6:"header";s:37:"function renderFilterCreationForm() {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:5:{s:4:"text";s:35:"

Renders the Filter Creation form
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:1:{i:0;s:28:"@todo complete this function";}s:11:"other_index";a:1:{s:5:"@todo";a:1:{i:0;s:22:"complete this function";}}}s:7:"content";s:0:"";s:12:"content_size";i:161;s:13:"content_lines";i:7;s:6:"atLine";i:476;}i:33;a:7:{s:6:"header";s:37:"function renderFilterCreationLink() {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:42:"

Renders a filter creation creation link
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:111;s:13:"content_lines";i:4;s:6:"atLine";i:489;}i:35;a:4:{s:6:"header";s:51:"function getFileIconHref($mimeType, $mimeSubType) {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:74:"

Returns the reference to the image file associated to given mime types.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:8:"[string]";i:1;s:21:"$mimeType: mime type.";}i:1;a:2:{i:0;s:8:"[string]";i:1;s:28:"$mimeSubType: mime sub type.";}}s:6:"return";a:2:{i:0;s:8:"[string]";i:1;s:48:"href attribute value, pointing to an image file.";}}s:6:"atLine";i:501;}i:37;a:7:{s:6:"header";s:31:"function getIconBaseAddress() {";s:11:"parentClass";s:24:"tx_damfrontend_rendering";s:4:"cDat";a:3:{s:4:"text";s:28:"

Returns the path to Icons
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:193;s:13:"content_lines";i:8;s:6:"atLine";i:528;}}}s:14:"MD5_765a6a221e";a:4:{s:8:"filename";s:32:"pi1/class.tx_damfrontend_pi1.php";s:8:"filesize";i:18227;s:6:"header";a:5:{s:4:"text";s:143:"


class.tx_damfrontend_pi1.php

Plugin 'DAM Frontend' for the 'dam_frontend' extension.


Some scripts that use this class:	--
Depends on:		--";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:4:{i:0;s:14:"@package typo3";i:1;s:27:"@subpackage tx_dam_frontend";i:2;s:39:"@author Martin Baum <typo3@in2form.com>";i:3;s:27:"@todo add stdWrap functions";}s:11:"other_index";a:4:{s:8:"@package";a:1:{i:0;s:6:"typo3 ";}s:11:"@subpackage";a:1:{i:0;s:16:"tx_dam_frontend ";}s:7:"@author";a:1:{i:0;s:31:"Martin Baum <typo3@in2form.com>";}s:5:"@todo";a:1:{i:0;s:21:"add stdWrap functions";}}}s:3:"DAT";a:16:{i:1;a:8:{s:6:"header";s:47:"class tx_damfrontend_pi1 extends tslib_pibase {";s:5:"class";i:1;s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:676:"

[CLASS/FUNCTION INDEX of SCRIPT]



  79: class tx_damfrontend_pi1 extends tslib_pibase
 101:     function init()
 120:     function initFilter()
 156:     function initList()
 193:     function initUpload()
 202:     function convertPiVars()
 243:     function loadFlexForm()
 264:     function main($content,$conf)
 346:     function catTree()
 359:     function getTree($mount= '')
 378:     function fileList()
 424:     function filterView()
 437:     function catSelection()
 466:     function singleView()
 488:     function filterList()
 516:     function uploadForm()

TOTAL FUNCTIONS: 15
(This index is automatically created/updated by the extension "extdeveval")
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:704;s:13:"content_lines";i:16;s:6:"atLine";i:77;}i:3;a:7:{s:6:"header";s:17:"function init() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:59:"

Inits this class and instanceates all nescessary classes
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:678;s:13:"content_lines";i:13;s:6:"atLine";i:99;}i:5;a:7:{s:6:"header";s:23:"function initFilter() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:67:"

Receiving filter information from the pluging view "filter_list"
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:1443;s:13:"content_lines";i:30;s:6:"atLine";i:118;}i:7;a:7:{s:6:"header";s:21:"function initList() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:42:"

this function is preparing the listview
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:1473;s:13:"content_lines";i:34;s:6:"atLine";i:154;}i:9;a:7:{s:6:"header";s:23:"function initUpload() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:5:{s:4:"text";s:55:"

this function is providing the fileupload to the ter
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[void]";i:1;s:3:"...";}s:5:"other";a:1:{i:0;s:31:"@todo finish this functionality";}s:11:"other_index";a:1:{s:5:"@todo";a:1:{i:0;s:25:"finish this functionality";}}}s:7:"content";s:0:"";s:12:"content_size";i:46;s:13:"content_lines";i:3;s:6:"atLine";i:195;}i:11;a:7:{s:6:"header";s:26:"function convertPiVars() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:83:"

reads the incoming piVars from the request and copies them to the internal array
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:1271;s:13:"content_lines";i:35;s:6:"atLine";i:204;}i:13;a:7:{s:6:"header";s:25:"function loadFlexForm() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:59:"

loads the data from the flexform into the internal array
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"void";i:1;s:0:"";}}s:7:"content";s:0:"";s:12:"content_size";i:535;s:13:"content_lines";i:13;s:6:"atLine";i:245;}i:15;a:7:{s:6:"header";s:31:"function main($content,$conf)	{";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:32:"

The main method of the PlugIn
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"string";i:1;s:28:"$content: The PlugIn content";}i:1;a:2:{i:0;s:5:"array";i:1;s:31:"$conf: The PlugIn configuration";}}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:49:"The html content that is displayed on the website";}}s:7:"content";s:0:"";s:12:"content_size";i:2544;s:13:"content_lines";i:79;s:6:"atLine";i:266;}i:17;a:7:{s:6:"header";s:20:"function catTree() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:28:"

renderes an category tree
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"html";i:1;s:33:"category tree - ready for display";}}s:7:"content";s:0:"";s:12:"content_size";i:474;s:13:"content_lines";i:11;s:6:"atLine";i:351;}i:19;a:6:{s:6:"header";s:30:"function getTree($mount= '') {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:7:"content";s:0:"";s:12:"content_size";i:188;s:13:"content_lines";i:10;s:6:"atLine";i:364;}i:21;a:7:{s:6:"header";s:21:"function fileList() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:295:"

fist this function gets the list of selected categories from the session vars
after that it retrievs a list of all documents from the doclogic
all documents are contained, which nat filtered and the user has
After that, the list is converted to an html view, rendered by the renderer instance
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"html";i:1;s:37:"HTML - list of all selected documents";}}s:7:"content";s:0:"";s:12:"content_size";i:1276;s:13:"content_lines";i:40;s:6:"atLine";i:383;}i:23;a:7:{s:6:"header";s:23:"function filterView() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:26:"

Renders the filter view
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:8:"[string]";i:1;s:28:"$content html auf filterview";}}s:7:"content";s:0:"";s:12:"content_size";i:132;s:13:"content_lines";i:5;s:6:"atLine";i:429;}i:25;a:7:{s:6:"header";s:25:"function catSelection() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:207:"

retrieves all selected catID's from the session and creates a list of category - records
by this list. After that, this list is given to the frontend - renderer to render a list of all
selected categories
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"html";i:1;s:56:"rendered list, ready for display, of selected categories";}}s:7:"content";s:0:"";s:12:"content_size";i:499;s:13:"content_lines";i:22;s:6:"atLine";i:442;}i:27;a:7:{s:6:"header";s:23:"function singleView() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:93:"

controller function dor the rendering of the single view
the internal singleID must be set
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:4:"html";i:1;s:16:"rendered content";}}s:7:"content";s:0:"";s:12:"content_size";i:570;s:13:"content_lines";i:22;s:6:"atLine";i:471;}i:29;a:4:{s:6:"header";s:23:"function filterList() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:77:"

function is responsible for rendering of a list with all availible filters
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"string";i:1;s:34:"html list of all availible filters";}}s:6:"atLine";i:499;}i:31;a:7:{s:6:"header";s:23:"function uploadForm() {";s:11:"parentClass";s:18:"tx_damfrontend_pi1";s:4:"cDat";a:3:{s:4:"text";s:24:"

Shows the upload form
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:8:"[string]";i:1;s:34:"$content the html code of the form";}}s:7:"content";s:0:"";s:12:"content_size";i:314;s:13:"content_lines";i:11;s:6:"atLine";i:527;}}}s:14:"MD5_730c3e71c0";a:4:{s:8:"filename";s:32:"pi2/class.tx_damfrontend_pi2.php";s:8:"filesize";i:11271;s:6:"header";a:5:{s:4:"text";s:140:"

Plugin 'DAM Frontend Filelist' for the 'dam_frontend' extension.
based on dam_downloadlist by Davide Principi <d.principi@provincia.ps.it
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:57:"@author	Stefan Busemann <stefan.busemann@bus-netzwerk.de>";i:1;s:14:"@package	TYPO3";i:2;s:26:"@subpackage	tx_damfrontend";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:49:"Stefan Busemann <stefan.busemann@bus-netzwerk.de>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:15:"tx_damfrontend ";}}}s:3:"DAT";a:11:{i:1;a:8:{s:6:"header";s:47:"class tx_damfrontend_pi2 extends tslib_pibase {";s:5:"class";i:1;s:11:"parentClass";s:18:"tx_damfrontend_pi2";s:4:"cDat";a:5:{s:4:"text";s:140:"

Plugin 'DAM Frontend Filelist' for the 'dam_frontend' extension.
based on dam_downloadlist by Davide Principi <d.principi@provincia.ps.it
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}s:5:"other";a:3:{i:0;s:57:"@author	Stefan Busemann <stefan.busemann@bus-netzwerk.de>";i:1;s:14:"@package	TYPO3";i:2;s:26:"@subpackage	tx_damfrontend";}s:11:"other_index";a:3:{s:7:"@author";a:1:{i:0;s:49:"Stefan Busemann <stefan.busemann@bus-netzwerk.de>";}s:8:"@package";a:1:{i:0;s:6:"TYPO3 ";}s:11:"@subpackage";a:1:{i:0;s:15:"tx_damfrontend ";}}}s:7:"content";s:0:"";s:12:"content_size";i:608;s:13:"content_lines";i:20;s:6:"atLine";i:36;}i:3;a:7:{s:6:"header";s:32:"function main($content, $conf) {";s:11:"parentClass";s:18:"tx_damfrontend_pi2";s:4:"cDat";a:3:{s:4:"text";s:21:"

Plugin Entry-Point
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"[type]";i:1;s:13:"$content: ...";}i:1;a:2:{i:0;s:6:"[type]";i:1;s:10:"$conf: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:1634;s:13:"content_lines";i:44;s:6:"atLine";i:64;}i:5;a:7:{s:6:"header";s:26:"function renderContent() {";s:11:"parentClass";s:18:"tx_damfrontend_pi2";s:4:"cDat";a:3:{s:4:"text";s:21:"

Generate HTML code
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:8:"[string]";i:1;s:12:"html content";}}s:7:"content";s:0:"";s:12:"content_size";i:385;s:13:"content_lines";i:17;s:6:"atLine";i:114;}i:7;a:7:{s:6:"header";s:44:"function renderGroup($groupKey, &$records) {";s:11:"parentClass";s:18:"tx_damfrontend_pi2";s:4:"cDat";a:3:{s:4:"text";s:43:"

Generates HTML code for a Group of Files
";s:5:"param";a:2:{i:0;a:2:{i:0;s:6:"[type]";i:1;s:14:"$groupKey: ...";}i:1;a:2:{i:0;s:6:"[type]";i:1;s:13:"$records: ...";}}s:6:"return";a:2:{i:0;s:8:"[string]";i:1;s:12:"html content";}}s:7:"content";s:0:"";s:12:"content_size";i:898;s:13:"content_lines";i:33;s:6:"atLine";i:139;}i:9;a:7:{s:6:"header";s:29:"function selectDamRecords() {";s:11:"parentClass";s:18:"tx_damfrontend_pi2";s:4:"cDat";a:3:{s:4:"text";s:20:"

Fetch dam records
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:1483;s:13:"content_lines";i:50;s:6:"atLine";i:178;}i:11;a:7:{s:6:"header";s:25:"function groupEnabled() {";s:11:"parentClass";s:18:"tx_damfrontend_pi2";s:4:"cDat";a:3:{s:4:"text";s:25:"

[Describe function...]
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:52;s:13:"content_lines";i:3;s:6:"atLine";i:234;}i:13;a:7:{s:6:"header";s:31:"function getGroupKey($record) {";s:11:"parentClass";s:18:"tx_damfrontend_pi2";s:4:"cDat";a:3:{s:4:"text";s:25:"

[Describe function...]
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"[type]";i:1;s:12:"$record: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:153;s:13:"content_lines";i:7;s:6:"atLine";i:244;}i:15;a:7:{s:6:"header";s:36:"function processRecord($damRecord) {";s:11:"parentClass";s:18:"tx_damfrontend_pi2";s:4:"cDat";a:3:{s:4:"text";s:40:"

Building the Details for a DAM record
";s:5:"param";a:1:{i:0;a:2:{i:0;s:7:"[array]";i:1;s:31:"$damRecord: DAM database record";}}s:6:"return";a:2:{i:0;s:7:"[array]";i:1;s:40:"an array containing processed DAM fields";}}s:7:"content";s:0:"";s:12:"content_size";i:2037;s:13:"content_lines";i:59;s:6:"atLine";i:258;}i:17;a:7:{s:6:"header";s:31:"function getIconBaseAddress() {";s:11:"parentClass";s:18:"tx_damfrontend_pi2";s:4:"cDat";a:3:{s:4:"text";s:25:"

[Describe function...]
";s:5:"param";a:0:{}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:190;s:13:"content_lines";i:7;s:6:"atLine";i:323;}i:19;a:4:{s:6:"header";s:51:"function getFileIconHref($mimeType, $mimeSubType) {";s:11:"parentClass";s:18:"tx_damfrontend_pi2";s:4:"cDat";a:3:{s:4:"text";s:74:"

Returns the reference to the image file associated to given mime types.
";s:5:"param";a:2:{i:0;a:2:{i:0;s:8:"[string]";i:1;s:21:"$mimeType: mime type.";}i:1;a:2:{i:0;s:8:"[string]";i:1;s:28:"$mimeSubType: mime sub type.";}}s:6:"return";a:2:{i:0;s:8:"[string]";i:1;s:48:"href attribute value, pointing to an image file.";}}s:6:"atLine";i:338;}i:21;a:7:{s:6:"header";s:20:"function log($msg) {";s:11:"parentClass";s:18:"tx_damfrontend_pi2";s:4:"cDat";a:3:{s:4:"text";s:25:"

[Describe function...]
";s:5:"param";a:1:{i:0;a:2:{i:0;s:6:"[type]";i:1;s:9:"$msg: ...";}}s:6:"return";a:2:{i:0;s:6:"[type]";i:1;s:3:"...";}}s:7:"content";s:0:"";s:12:"content_size";i:434;s:13:"content_lines";i:12;s:6:"atLine";i:369;}}}}}